{
  "title": "Hyper Protect Container Runtime Contract",
  "description": "Schema for the HPCR contract",
  "allOf": [
    {
      "$ref": "#/$defs/contract"
    },
    {
      "title": "se-app-schema",
      "description": "Schema for the application portion of the contract",
      "type": "object",
      "properties": {
        "workload": {
          "$ref": "#/allOf/1/$defs/workload"
        },
        "env": {
          "type": "object",
          "title": "Environment",
          "description": "Specification of environment portion.",
          "properties": {
            "env": {
              "$ref": "#/allOf/1/$defs/env"
            }
          },
          "examples": [
            {
              "env": {
                "VARIABLE": "value",
                "PORT": "value"
              }
            }
          ]
        }
      },
      "$defs": {
        "workload": {
          "type": "object",
          "title": "Workload",
          "description": "Specification of application portions.",
          "properties": {
            "compose": {
              "$ref": "#/allOf/1/$defs/compose"
            },
            "play": {
              "$ref": "#/allOf/1/$defs/play"
            },
            "confidential-containers": {
              "type": "object"
            },
            "env": {
              "$ref": "#/allOf/1/$defs/env"
            }
          },
          "oneOf": [
            {
              "type": "object",
              "required": [
                "compose"
              ]
            },
            {
              "type": "object",
              "required": [
                "play"
              ]
            },
            {
              "type": "object",
              "required": [
                "confidential-containers"
              ]
            }
          ]
        },
        "env": {
          "type": "object",
          "title": "Environment Variables",
          "description": "List of environment variables.",
          "patternProperties": {
            "^[A-Za-z_][A-Za-z0-9_]*$": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "examples": [
            {
              "VARIABLE": "value",
              "PORT": "value"
            }
          ]
        },
        "compose": {
          "type": "object",
          "title": "Docker Compose",
          "description": "Specification of configuration options for docker compose.",
          "properties": {
            "archive": {
              "$ref": "#/allOf/1/$defs/tgz"
            }
          },
          "additionalProperties": false,
          "required": [
            "archive"
          ]
        },
        "play": {
          "type": "object",
          "title": "Podman Pod Play Kube",
          "description": "Specification of configuration options for podman play kube.",
          "properties": {
            "archive": {
              "$ref": "#/allOf/1/$defs/tgz"
            }
          },
          "additionalProperties": false,
          "required": [
            "archive"
          ]
        },
        "tgz": {
          "type": "string",
          "title": "TGZ Blob",
          "contentEncoding": "base64",
          "contentMediaType": "application/tar+gzip",
          "description": "Base64 encoded TGZ file of the play kube folder.",
          "pattern": "^[-A-Za-z0-9+/]*={0,3}$",
          "minLength": 4
        }
      }
    },
    {
      "title": "se-logging-schema",
      "description": "Schema for the logging portion of a contract",
      "type": "object",
      "properties": {
        "env": {
          "$ref": "#/allOf/2/$defs/env"
        }
      },
      "$defs": {
        "env": {
          "type": "object",
          "title": "Environment",
          "description": "Environment portion.",
          "properties": {
            "logging": {
              "$ref": "#/allOf/2/$defs/logging"
            }
          },
          "required": [
            "logging"
          ]
        },
        "logging": {
          "type": "object",
          "title": "Logging",
          "description": "Specification of logging options of the supported backends.",
          "properties": {
            "logDNA": {
              "$ref": "#/allOf/2/$defs/logDNA"
            },
            "syslog": {
              "$ref": "#/allOf/2/$defs/syslog"
            }
          }
        },
        "logDNA": {
          "type": "object",
          "title": "LogDNA",
          "description": "Specification of logging options for the logDNA backend.",
          "properties": {
            "ingestionKey": {
              "type": "string",
              "title": "Ingestion Key",
              "description": "LogDNA ingestion key.",
              "pattern": "^[a-z0-9]{32}$"
            },
            "hostname": {
              "type": "string",
              "title": "Hostname",
              "format": "hostname",
              "description": "Hostname of the logDNA server."
            },
            "port": {
              "type": "integer",
              "title": "Port",
              "description": "Port of the logDNA server.",
              "exclusiveMinimum": 0,
              "default": 6514
            },
            "tags": {
              "type": "array",
              "title": "Tags",
              "description": "Tags that will be added to the log messages.",
              "items": {
                "type": "string"
              }
            }
          },
          "additionalProperties": false,
          "required": [
            "ingestionKey",
            "hostname"
          ]
        },
        "syslog": {
          "type": "object",
          "title": "syslog",
          "description": "Specification of logging options for a syslog backend (e.g. logstash or remote rsyslog server).",
          "properties": {
            "hostname": {
              "type": "string",
              "title": "Hostname",
              "format": "hostname",
              "description": "Hostname of the syslog server.",
              "examples": [
                "9.216.4.211",
                "localhost"
              ]
            },
            "port": {
              "type": "integer",
              "title": "Port",
              "description": "Port of the syslog server.",
              "exclusiveMinimum": 0,
              "default": 514,
              "examples": [
                514
              ]
            },
            "server": {
              "$ref": "#/allOf/2/$defs/certificate"
            },
            "cert": {
              "$ref": "#/allOf/2/$defs/certificate"
            },
            "key": {
              "$ref": "#/allOf/2/$defs/privkey"
            }
          },
          "additionalProperties": false,
          "required": [
            "server",
            "hostname"
          ]
        },
        "certificate": {
          "type": "string",
          "title": "Certificate",
          "description": "Certificate x509 in PEM format.",
          "pattern": "^-----BEGIN CERTIFICATE-----\\s+(?:[A-Za-z\\d+/]{4}\\s*)*(?:[A-Za-z\\d+/]{3}=|[A-Za-z\\d+/]{2}==)?\\s+-----END CERTIFICATE-----\\s*$",
          "examples": [
            "-----BEGIN CERTIFICATE-----\r\n          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\r\n          IMgpKwgEVDjnlP3qptOlkRopjYVV\r\n          -----END CERTIFICATE-----"
          ]
        },
        "privkey": {
          "type": "string",
          "title": "Private Key",
          "description": "Private Key in PEM format.",
          "pattern": "^-----BEGIN (?:[A-Z]+\\s+)?PRIVATE KEY-----\\s+(?:[A-Za-z\\d+/]{4}\\s*)*(?:[A-Za-z\\d+/]{3}=|[A-Za-z\\d+/]{2}==)?\\s+-----END (?:[A-Z]+\\s+)?PRIVATE KEY-----\\s*$",
          "examples": [
            "-----BEGIN PRIVATE KEY-----\r\n          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\r\n          IMgpKwgEVDjnlP3qptOlkRopjYVV\r\n          -----END PRIVATE KEY-----"
          ]
        }
      }
    },
    {
      "title": "se-volumes-schema",
      "description": "Schema for the volumes portion of the contract",
      "type": "object",
      "properties": {
        "workload": {
          "$ref": "#/allOf/3/$defs/workload"
        },
        "env": {
          "$ref": "#/allOf/3/$defs/env"
        }
      },
      "examples": [
        {
          "env": {
            "volumes": {
              "test": {
                "seed": "env phrase"
              }
            }
          },
          "workload": {
            "volumes": {
              "test": {
                "seed": "workload phrase"
              }
            }
          }
        },
        {
          "env": {
            "volumes": {
              "test": {
                "seed": "env phrase"
              }
            }
          },
          "workload": {
            "volumes": {
              "test": {
                "mount": "/mnt/data",
                "filesystem": "ext4",
                "seed": "workload phrase"
              }
            }
          }
        }
      ],
      "$defs": {
        "workload": {
          "type": "object",
          "title": "Workload",
          "description": "Specification of workload portion.",
          "properties": {
            "volumes": {
              "$ref": "#/allOf/3/$defs/workloadVolumes"
            }
          }
        },
        "env": {
          "type": "object",
          "title": "Environment",
          "description": "Specification of environment portion.",
          "properties": {
            "volumes": {
              "$ref": "#/allOf/3/$defs/envVolumes"
            }
          }
        },
        "workloadVolumes": {
          "type": "object",
          "title": "Volumes",
          "description": "Specification of volumes portion.",
          "patternProperties": {
            "^[a-z_][a-z0-9_]*$": {
              "$ref": "#/allOf/3/$defs/workloadVolume"
            }
          },
          "additionalProperties": false,
          "examples": [
            {
              "test": {
                "mount": "/mnt/data",
                "seed": "fancy phrase"
              }
            }
          ]
        },
        "envVolumes": {
          "type": "object",
          "title": "Volumes",
          "description": "Specification of volumes portion.",
          "patternProperties": {
            "^[a-z_][a-z0-9_]*$": {
              "$ref": "#/allOf/3/$defs/envVolume"
            }
          },
          "additionalProperties": false,
          "examples": [
            {
              "test": {
                "seed": "fancy phrase"
              }
            }
          ]
        },
        "envVolume": {
          "oneOf": [
            {
              "$ref": "#/allOf/3/$defs/envVolumeWithKey"
            },
            {
              "$ref": "#/allOf/3/$defs/envVolumePlain"
            }
          ]
        },
        "envVolumeWithKey": {
          "type": "object",
          "title": "Volume",
          "description": "Definition of the specification of a single volume.",
          "properties": {
            "seed": {
              "$ref": "#/allOf/3/$defs/seed"
            },
            "apiKey": {
              "$ref": "#/allOf/3/$defs/apiKey"
            },
            "kmEndpointURL": {
              "$ref": "#/allOf/3/$defs/kmEndpointURL"
            },
            "hpcsInstanceID": {
              "$ref": "#/allOf/3/$defs/hpcsInstanceID"
            },
            "crkID": {
              "$ref": "#/allOf/3/$defs/crkID"
            }
          },
          "required": [
            "seed",
            "apiKey",
            "kmEndpointURL",
            "hpcsInstanceID",
            "crkID"
          ],
          "additionalProperties": false
        },
        "envVolumePlain": {
          "type": "object",
          "title": "Volume",
          "description": "Definition of the specification of a single volume.",
          "properties": {
            "seed": {
              "$ref": "#/allOf/3/$defs/seed"
            }
          },
          "required": [
            "seed"
          ],
          "additionalProperties": false
        },
        "workloadVolume": {
          "type": "object",
          "title": "Volume",
          "description": "Definition of the specification of a single volume.",
          "properties": {
            "mount": {
              "$ref": "#/allOf/3/$defs/mount"
            },
            "filesystem": {
              "$ref": "#/allOf/3/$defs/filesystem"
            },
            "seed": {
              "$ref": "#/allOf/3/$defs/seed"
            }
          },
          "required": [
            "seed"
          ],
          "additionalProperties": false
        },
        "seed": {
          "type": "string",
          "title": "seed",
          "description": "Part of the encryption seed used to encrypt the device.",
          "minLength": 3,
          "examples": [
            "Lorem Ipsum"
          ]
        },
        "filesystem": {
          "type": "string",
          "title": "File System",
          "description": "Type of the file system to mount.",
          "enum": [
            "xfs",
            "ext4",
            "btrfs"
          ],
          "default": "ext4",
          "examples": [
            "btrfs",
            "ext4"
          ]
        },
        "mount": {
          "type": "string",
          "title": "Mount Point",
          "description": "Mountpoint of the device.",
          "pattern": "^(/[^/]+)+$",
          "default": "/mnt/data",
          "examples": [
            "/mnt/data"
          ]
        },
        "apiKey": {
          "type": "string",
          "title": "API key",
          "description": "API key",
          "minLength": 10,
          "examples": [
            "0yAsYtmhSwHjirAlKsxV_SboIQ8DM8i1tK6wmmBVZ5v9"
          ]
        },
        "kmEndpointURL": {
          "type": "string",
          "title": "KM endpoint URL",
          "description": "Key management endpoint url",
          "minLength": 10,
          "format": "uri",
          "examples": [
            "https://api.us-south.hs-crypto.cloud.ibm.com:8618"
          ]
        },
        "hpcsInstanceID": {
          "type": "string",
          "title": "HPCS Instance ID",
          "description": "hyper Protect Crypto Service Instance ID",
          "minLength": 10,
          "examples": [
            "cbe4caff-cfb6-4082-b0ae-c47bc3164bd6"
          ]
        },
        "crkID": {
          "type": "string",
          "title": "CRK ID",
          "description": "Customer Root Key ID",
          "minLength": 10,
          "examples": [
            "6fd21c19-6kiu-4e45-9e3f-521fa6f2642e"
          ]
        }
      }
    },
    {
      "title": "se-images-schema",
      "description": "Schema for the images portion of the contract",
      "type": "object",
      "properties": {
        "workload": {
          "$ref": "#/allOf/4/$defs/workload"
        }
      },
      "examples": [],
      "$defs": {
        "workload": {
          "type": "object",
          "title": "Workload",
          "description": "Specification of workload portion.",
          "properties": {
            "images": {
              "$ref": "#/allOf/4/$defs/images"
            }
          }
        },
        "images": {
          "type": "object",
          "title": "Images",
          "description": "Specification of images portion.",
          "properties": {
            "dct": {
              "$ref": "#/allOf/4/$defs/dct"
            },
            "rhs": {
              "$ref": "#/allOf/4/$defs/rhs"
            }
          },
          "additionalProperties": false
        },
        "dct": {
          "type": "object",
          "title": "Trust on First Use",
          "description": "Specification of docker DCT configuration. The key into the map is the docker image name (without the tag).",
          "$comment": "The regular expression uses the regex for a image name ",
          "patternProperties": {
            "^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-]*[a-zA-Z0-9])\\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\\-]*[A-Za-z0-9])\\/[a-z0-9_-]{3,30}\\/[a-z0-9_-]{2,255}$": {
              "$ref": "#/allOf/4/$defs/dctImage"
            }
          },
          "additionalProperties": false
        },
        "rhs": {
          "type": "object",
          "title": "redhat image sign verification",
          "description": "Specification of the redhat signing process of OCI image signatures.",
          "patternProperties": {
            "^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-]*[a-zA-Z0-9])\\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\\-]*[A-Za-z0-9])\\/[a-z0-9_-]{3,30}\\/[a-z0-9_-]{2,255}:[a-zA-Z0-9_][a-zA-Z0-9_\\-\\.]{2,127}$": {
              "$ref": "#/allOf/4/$defs/rhsImage"
            }
          },
          "additionalProperties": false
        },
        "dctImage": {
          "type": "object",
          "title": "Image",
          "description": "Trust on first use configuration for a particular image.",
          "properties": {
            "notary": {
              "type": "string",
              "description": "notary url",
              "format": "uri"
            },
            "publicKey": {
              "type": "string",
              "contentEncoding": "base64",
              "description": "image signing public key base64 encoded format"
            }
          },
          "required": [
            "notary",
            "publicKey"
          ],
          "additionalProperties": false
        },
        "rhsImage": {
          "type": "object",
          "title": "Image",
          "description": "Simple signatures.",
          "properties": {
            "publicKey": {
              "type": "string",
              "contentEncoding": "base64",
              "description": "image signing public key base64 encoded format"
            }
          },
          "required": [
            "publicKey"
          ],
          "additionalProperties": false
        }
      }
    },
    {
      "title": "se-auth-schema",
      "description": "Schema for the authentication portion of the contract against docker content registries. Note that authentication is limited to the hostnames of the container registries, you cannot provide separate authentications against subregistries.",
      "examples": [
        {
          "workload": {
            "auths": {
              "https://index.docker.io/v1/": {
                "password": "...",
                "username": "..."
              },
              "de.icr.io": {
                "password": "...",
                "username": "apikey"
              }
            }
          }
        }
      ],
      "type": "object",
      "properties": {
        "workload": {
          "$ref": "#/allOf/5/$defs/workload"
        },
        "env": {
          "$ref": "#/allOf/5/$defs/env"
        }
      },
      "$defs": {
        "workload": {
          "type": "object",
          "title": "Workload",
          "description": "Specification of authentication portions of the workload.",
          "properties": {
            "auths": {
              "$ref": "#/allOf/5/$defs/auths"
            }
          }
        },
        "env": {
          "type": "object",
          "title": "Environment",
          "description": "Specification of authentication portions of the environment.",
          "properties": {
            "auths": {
              "$ref": "#/allOf/5/$defs/auths"
            }
          }
        },
        "credential": {
          "type": "object",
          "title": "Credential",
          "description": "Credentials for authenticating against a container registry.",
          "examples": [
            {
              "username": "user@docker.io",
              "password": "XXX"
            },
            {
              "username": "apikey",
              "password": "YYY"
            }
          ],
          "properties": {
            "username": {
              "type": "string",
              "minLength": 3,
              "description": "Username, this is typically the e-mail address, but it can also be a keyword such as 'apikey'."
            },
            "password": {
              "type": "string",
              "minLength": 3,
              "description": "Password or API token."
            }
          },
          "required": [
            "username",
            "password"
          ],
          "additionalProperties": false
        },
        "auths": {
          "type": "object",
          "title": "Authentications",
          "description": "Authentication settings for pulling images. The key must be the hostname of the container registry or the string 'https://index.docker.io/v1/' for the default docker registry.",
          "examples": [
            {
              "https://index.docker.io/v1/": {
                "password": "...",
                "username": "..."
              }
            },
            {
              "de.icr.io": {
                "password": "...",
                "username": "..."
              }
            }
          ],
          "patternProperties": {
            "^(([a-zA-Z]|[a-zA-Z][a-zA-Z0-9\\-]*[a-zA-Z0-9])\\.)*([A-Za-z]|[A-Za-z][A-Za-z0-9\\-]*[A-Za-z0-9])|(https://index.docker.io/v1/)$": {
              "$ref": "#/allOf/5/$defs/credential"
            }
          },
          "additionalProperties": false
        }
      }
    },
    {
      "title": "se-contract-signature-schema",
      "description": "Schema that defines the contract signatures",
      "type": "object",
      "properties": {
        "envWorkloadSignature": {
          "$ref": "#/allOf/6/$defs/signature"
        },
        "env": {
          "$ref": "#/allOf/6/$defs/env"
        }
      },
      "examples": [
        {
          "envWorkloadSignature": "AkhADcuGz3jT6v5euq8x/ZuhMmVLTA807VzJUjZcLphTwHVkJ5jyPLNrI5yX68lO\r\n      aKt/uxow6qsng4oYW5KX8MLZEHA6/dx8aBEBivYPQuw24yL//40tWpAom4bNZSnA\r\n      Nm7leaNNjoPJtpdC6cU1XNDzEkeJ+WP/KdWkf+g3lJinIlyTFiuhNRahVgDCyjTN\r\n      ILcQc0hNcI6+bR6ZcXZ8UwQb+PBDc5AshiZDDYSx/dtr4Np+0AoZOfNukRRC+Guj\r\n      59pbpHNj7a/eXksyEPGSVSRpOg0EKdG53AO72fKHbLgiI4XzZZX3rZnHwJf5wXWN\r\n      DoPnAfJGV3yzue1fwcsW5QUKJ5Nch4rTutpj98Cin5PHivOfMPEARSXQTn/mZI5l\r\n      dvqs4qbDGkXOS9P0NHSDpyZjfoZOe6rg4lWJB0KbhzaarFulcGiJ0w+1uARC+wBQ\r\n      rOgFQMAzfzgAPJe25vukKKW259bArEsr8WjiN0rSg7CMccGE4no0j7CeGvM5F/0s\r\n      jRG6l89MwnwtN8BY3M8Y1sgVYLja8jYgTqMBKPJOMDzHzXBfpAztYStx1Snf66kk\r\n      l1cKi3PSlplgWP8gDZnUPTTFDp6sNHCRoJtmrUeyVIIUUjoMwr5EJKWW/6nh4E+W\r\n      e53ljMugGJd4zeyTf9g4ijzbRd5WylMsl9+QCGXndwY=",
          "env": {
            "signingKey": "-----BEGIN PUBLIC KEY-----\r\n    MIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEAvFF9XaCvJzydGyVvKjN3\r\n    CikFeSdmrUwL9dS8AbhHndojIXJ9pXurCzQlWE61XeOcz3ThaoXxM1dkG71KSFhe\r\n    VTbWqcWnMfJL8F+uD8b16o21quk+D+HG7gIb4s+gqADW8xyfbTIqO7bHu5AgswqO\r\n    qN1aDp+L/yLR3EjCZE7fgwXmE2MkWMusoNRf5vvf4t+cMkpii5dYSC5K0RqRiZxS\r\n    3dwrJICtPZqnTmbIGCg00I4PCgYx4YYdo/meZRhXeHgBCYe3wklCEHd5NgQ5Vh2P\r\n    snyjidlPUmrPkG7uG/qcybVwbzFaNStJ1afAEfSf/7n5JVzRcBIZORUfRmE3eDUJ\r\n    05n2SuxcVIkOvKFdEV13DCcR+gMQMVpiXAdiR0olT+I10Ts5o/+eBXCdeUUXf8al\r\n    PXO7jxMoLr717adTFwDzP4N+WnwIBRCO/JEAmn1qMu+EQEaCMgvqN6gfsQjrJ4n8\r\n    3T+ZKGePvuA6zAXTSTytce5yPhOaF3xplLBZo0nBPbLW73fc2MKzRmz4RCz2r7YS\r\n    EFLA5lgcK2Td/IS0v7ItxCJXH9kmGxSUaZlc49AAn3y80lQyN/6Pncqg4sIiABM5\r\n    8uv71bYV9ZEQgqi/H5/aseWGcnvuN9pe2CSh/QZawNMZZ/kcm7UXZbHiyJFDuRaY\r\n    07pizMbUXsSkkNJBqeVSmZcCAwEAAQ==\r\n    -----END PUBLIC KEY-----\r\n    "
          }
        }
      ],
      "$defs": {
        "signature": {
          "type": "string",
          "title": "Signature",
          "description": "Signature used to validate the environment.",
          "pattern": "^(?:[A-Za-z\\d+/]{4}\\s*)*(?:[A-Za-z\\d+/]{3}=|[A-Za-z\\d+/]{2}==)?$"
        },
        "env": {
          "type": "object",
          "title": "Environment",
          "description": "Signature calculated across the env and workload sections of the contract to ensure the env section is being used with an appropriate workload section.",
          "properties": {
            "signingKey": {
              "$ref": "#/allOf/6/$defs/signingKey"
            }
          }
        },
        "signingKey": {
          "type": "string",
          "title": "Signing Key",
          "description": "Public key used to validate the envWorkloadSignature and ensure the env section is being used with the expected workload section.",
          "pattern": "^-----BEGIN PUBLIC KEY-----\\s+(?:[A-Za-z\\d+/]{4}\\s*)*(?:[A-Za-z\\d+/]{3}=|[A-Za-z\\d+/]{2}==)?\\s+-----END PUBLIC KEY-----\\s*$",
          "examples": [
            "-----BEGIN PUBLIC KEY-----\r\n    MIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEAvFF9XaCvJzydGyVvKjN3\r\n    CikFeSdmrUwL9dS8AbhHndojIXJ9pXurCzQlWE61XeOcz3ThaoXxM1dkG71KSFhe\r\n    VTbWqcWnMfJL8F+uD8b16o21quk+D+HG7gIb4s+gqADW8xyfbTIqO7bHu5AgswqO\r\n    qN1aDp+L/yLR3EjCZE7fgwXmE2MkWMusoNRf5vvf4t+cMkpii5dYSC5K0RqRiZxS\r\n    3dwrJICtPZqnTmbIGCg00I4PCgYx4YYdo/meZRhXeHgBCYe3wklCEHd5NgQ5Vh2P\r\n    snyjidlPUmrPkG7uG/qcybVwbzFaNStJ1afAEfSf/7n5JVzRcBIZORUfRmE3eDUJ\r\n    05n2SuxcVIkOvKFdEV13DCcR+gMQMVpiXAdiR0olT+I10Ts5o/+eBXCdeUUXf8al\r\n    PXO7jxMoLr717adTFwDzP4N+WnwIBRCO/JEAmn1qMu+EQEaCMgvqN6gfsQjrJ4n8\r\n    3T+ZKGePvuA6zAXTSTytce5yPhOaF3xplLBZo0nBPbLW73fc2MKzRmz4RCz2r7YS\r\n    EFLA5lgcK2Td/IS0v7ItxCJXH9kmGxSUaZlc49AAn3y80lQyN/6Pncqg4sIiABM5\r\n    8uv71bYV9ZEQgqi/H5/aseWGcnvuN9pe2CSh/QZawNMZZ/kcm7UXZbHiyJFDuRaY\r\n    07pizMbUXsSkkNJBqeVSmZcCAwEAAQ==\r\n    -----END PUBLIC KEY-----\r\n    "
          ]
        }
      }
    },
    {
      "title": "se-attestation-schema",
      "description": "Schema that defines the attestation public key",
      "type": "object",
      "properties": {
        "attestationPublicKey": {
          "$ref": "#/allOf/7/$defs/attestationPublicKey"
        }
      },
      "examples": [
        {
          "attestationPublicKey": "-----BEGIN PUBLIC KEY-----\r\n    MIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEAvFF9XaCvJzydGyVvKjN3\r\n    CikFeSdmrUwL9dS8AbhHndojIXJ9pXurCzQlWE61XeOcz3ThaoXxM1dkG71KSFhe\r\n    VTbWqcWnMfJL8F+uD8b16o21quk+D+HG7gIb4s+gqADW8xyfbTIqO7bHu5AgswqO\r\n    qN1aDp+L/yLR3EjCZE7fgwXmE2MkWMusoNRf5vvf4t+cMkpii5dYSC5K0RqRiZxS\r\n    3dwrJICtPZqnTmbIGCg00I4PCgYx4YYdo/meZRhXeHgBCYe3wklCEHd5NgQ5Vh2P\r\n    snyjidlPUmrPkG7uG/qcybVwbzFaNStJ1afAEfSf/7n5JVzRcBIZORUfRmE3eDUJ\r\n    05n2SuxcVIkOvKFdEV13DCcR+gMQMVpiXAdiR0olT+I10Ts5o/+eBXCdeUUXf8al\r\n    PXO7jxMoLr717adTFwDzP4N+WnwIBRCO/JEAmn1qMu+EQEaCMgvqN6gfsQjrJ4n8\r\n    3T+ZKGePvuA6zAXTSTytce5yPhOaF3xplLBZo0nBPbLW73fc2MKzRmz4RCz2r7YS\r\n    EFLA5lgcK2Td/IS0v7ItxCJXH9kmGxSUaZlc49AAn3y80lQyN/6Pncqg4sIiABM5\r\n    8uv71bYV9ZEQgqi/H5/aseWGcnvuN9pe2CSh/QZawNMZZ/kcm7UXZbHiyJFDuRaY\r\n    07pizMbUXsSkkNJBqeVSmZcCAwEAAQ==\r\n    -----END PUBLIC KEY-----\r\n    "
        }
      ],
      "$defs": {
        "attestationPublicKey": {
          "type": "string",
          "title": "Attestation public key",
          "description": "Public key used to encrypt the attestation record.",
          "pattern": "^-----BEGIN PUBLIC KEY-----\\s+(?:[A-Za-z\\d+/]{4}\\s*)*(?:[A-Za-z\\d+/]{3}=|[A-Za-z\\d+/]{2}==)?\\s+-----END PUBLIC KEY-----\\s*$",
          "examples": [
            "-----BEGIN PUBLIC KEY-----\r\n    MIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEAvFF9XaCvJzydGyVvKjN3\r\n    CikFeSdmrUwL9dS8AbhHndojIXJ9pXurCzQlWE61XeOcz3ThaoXxM1dkG71KSFhe\r\n    VTbWqcWnMfJL8F+uD8b16o21quk+D+HG7gIb4s+gqADW8xyfbTIqO7bHu5AgswqO\r\n    qN1aDp+L/yLR3EjCZE7fgwXmE2MkWMusoNRf5vvf4t+cMkpii5dYSC5K0RqRiZxS\r\n    3dwrJICtPZqnTmbIGCg00I4PCgYx4YYdo/meZRhXeHgBCYe3wklCEHd5NgQ5Vh2P\r\n    snyjidlPUmrPkG7uG/qcybVwbzFaNStJ1afAEfSf/7n5JVzRcBIZORUfRmE3eDUJ\r\n    05n2SuxcVIkOvKFdEV13DCcR+gMQMVpiXAdiR0olT+I10Ts5o/+eBXCdeUUXf8al\r\n    PXO7jxMoLr717adTFwDzP4N+WnwIBRCO/JEAmn1qMu+EQEaCMgvqN6gfsQjrJ4n8\r\n    3T+ZKGePvuA6zAXTSTytce5yPhOaF3xplLBZo0nBPbLW73fc2MKzRmz4RCz2r7YS\r\n    EFLA5lgcK2Td/IS0v7ItxCJXH9kmGxSUaZlc49AAn3y80lQyN/6Pncqg4sIiABM5\r\n    8uv71bYV9ZEQgqi/H5/aseWGcnvuN9pe2CSh/QZawNMZZ/kcm7UXZbHiyJFDuRaY\r\n    07pizMbUXsSkkNJBqeVSmZcCAwEAAQ==\r\n    -----END PUBLIC KEY-----\r\n    "
          ]
        }
      }
    }
  ],
  "$defs": {
    "contract": {
      "type": "object",
      "title": "Contract",
      "description": "Contract portion.",
      "properties": {
        "env": {
          "$ref": "#/$defs/env"
        },
        "workload": {
          "$ref": "#/$defs/workload"
        }
      },
      "examples": [
        {
          "workload": {
            "type": "workload"
          },
          "env": {
            "type": "env"
          }
        }
      ]
    },
    "env": {
      "type": "object",
      "title": "Environment",
      "description": "Environment portion.",
      "properties": {
        "type": {
          "const": "env",
          "description": "Type identifier for the environment section."
        }
      },
      "required": [
        "type"
      ]
    },
    "workload": {
      "type": "object",
      "title": "Workload",
      "description": "Workload portion.",
      "properties": {
        "type": {
          "const": "workload",
          "description": "Type identifier for the workload section."
        }
      },
      "required": [
        "type"
      ]
    }
  }
}